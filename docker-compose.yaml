version: '3.8'

services:
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: blue
    ports:
      - "8081:${PORT}"
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=${PORT}
    restart: unless-stopped

  app_green:
    image: ${GREEN_IMAGE}
    container_name: green
    ports:
      - "8082:${PORT}"
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=${PORT}
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "8080:80"
    volumes:
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./nginx/reload.sh:/usr/local/bin/reload.sh:ro
      - ./nginx/logs:/var/log/nginx
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL}
      - BLUE_BACKUP=${BLUE_BACKUP}
      - GREEN_BACKUP=${GREEN_BACKUP}
      - RELEASE_ID=${RELEASE_ID_ACTIVE}
    depends_on:
      - app_blue
      - app_green
    restart: unless-stopped

  alert_watcher:
    build: ./alert_watcher                      
    container_name: alert_watcher
    restart: unless-stopped
    volumes:
      - ./nginx/logs:/var/log/nginx:ro
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - nginx

volumes:
  nginx_logs:
